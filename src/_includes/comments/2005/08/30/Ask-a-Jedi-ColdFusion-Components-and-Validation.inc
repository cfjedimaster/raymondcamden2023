
<div class="comment" id="c_1713620469">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620469">1</a> by Callum
		posted on 8/31/2005 at 6:46 AM
		</div>
		<div class="comment_text"><p>This is one of the most commonly asked questions from CF developers looking to shift to a more "OO" style of coding.</p><p>And, like everything else in OO, the answer is generally...(as Ray noted) "It depends".</p><p>For myself, I have found that I usually have 4 components in the scenario that Ray mentioned above.</p><p>I have a DAO for performing crud operations.<br>I have a "Bean" that is essentially an instance of the data retrieved from the DAO.<br>I have a Gateway, for dealing with more than one record.</p><p>But unlike Ray's example, I also use what I refer to as a "Business Object" (BO).</p><p>In most instances, in the "Bean" that is created, I store information about the database field types (int, string etc), the length of the field, whether or not the field can contain a null value as well as the original value of the field.</p><p>(Storing the original value allows me to update only those fields that have changed in the Bean - a useful tool in multi user environments with reasonable load.)</p><p>When using the getter and setter methods of this bean, I can choose to validate the field or not, and I have a validate() method that can be used to validate the data in it's entirety.</p><p>The important thing to note here is that the validation methods validate whether or not the information contained within conforms to the &lt;strong&gt;Database Requirements&lt;/strong&gt;.</p><p>I then have a BO, which uses composition to "contain" several beans. (IE. An "InvoiceBO" contains instances of both an InvoiceHeader Bean as well as an array of InvoiceItem Beans.)</p><p>Calling the getter and setter methods on the BO, will invoke the getter and setter methods on the internal beans.  This essentially allows me to contain business logic (including validation routines) in a separate layer.</p><p>So my answer to this question would be "What do you want to validate?, that the data conforms to the database rules, or that it conforms to business requirements?"</p><p>Like Ray, I'm *starting* to grasp the concepts (so no flames !!), but I have found this approach to be invaluable for our applications.</p><p>I've also found the resources that Ray mentioned to be invaluable on my path to exploring OO.</p><p>Happy Hunting !!</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620470">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620470">2</a> by Brad Haas
		posted on 8/31/2005 at 7:39 AM
		</div>
		<div class="comment_text"><p>Ray,</p><p>I just want to thank you for taking the time to compose such a detailed response.  I know there are many paths I can take with an OO approach.  I've already visited the resources you've listed and I think they are invaluable.  As I stated in my question to you; I've seen many different examples of methodologies for OO CF, but most gloss over data validation (probably to save space).</p><p>I've even studied code generated by automated CFC generators (I know never design your objects around a database structure, unless you absolutely have to) to see what type of validation was generated.  What I discovered was that this code was way over my head.  So, what I was looking for was pseudo-code just to give me an idea.  I've got to say that you hit the nail right on the head.  I got an idea of what you do without getting in too deep.  You know what they say: "Teach a man to fish..."</p><p>I also appreciate the post by Callum and I'd be interested in hearing about other OO validation methods that anyone is willing to post.</p><p>Thanks again,<br>Brad</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620467">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620467">3</a> by barry.b
		posted on 8/31/2005 at 9:54 AM
		</div>
		<div class="comment_text"><p>&gt;&gt;  The important thing is that the validation logic is not kept in the form, but inside the CFC</p><p>Ray, just to be perfectly clear here, you're talking about *server-side* validation/last line of defence, yes?</p><p>nothing to do with usability, user experiance and client-side validation, yes?</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620468">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620468">4</a> by Scott Barnes
		posted on 8/31/2005 at 1:20 PM
		</div>
		<div class="comment_text"><p>Hmm,<br>A Business Object is just that, an object which has a composition of entities (ie beans in callums case).</p><p>BO's are a nice safe name to say "service" or "collection manager".. Ie, If you want to find a semantically correct name you could even opt for DataProvider (if you are using a bunch of other methods like addBean, removeBean etc)</p><p>As for beans adhering to Database logic? in truth, i'd refrain from doing this period.</p><p>Its an easy mistake to be made or taken for granted, as majority of the time our coldfusion applications are consistently coupled with the one Database Language (MySQL or SQL).</p><p>That's fine, provided you can gurantee that existance for life.</p><p>If you can't, its best to leave DB specifics until you get to a point where you are data farming for information or storing information away.</p><p>Also, do you map your Beans to suite your Database? or do you do it to suite the context of its use?</p><p>An example:</p><p>InvoiceBO - an Invoice has costcodes associated to it, aswell as "Approvers".. both are an array of other sub-beans?</p><p>The InvoiceBO would have two properties, "Approvers" and "Costcodes" even though in the database they are seperate entities unto themselves, in that when you ask information about an invoice, its easy to assume that you'll want to know how many costcodes are in their or who approved it last etc.</p><p>Question about Composition: Does a BlogBean have comments or is that seperate if so why :)</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620471">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620471">5</a> by Joe Rinehart
		posted on 8/31/2005 at 3:56 PM
		</div>
		<div class="comment_text"><p>Scott,</p><p>Does a BlogBean (maybe EntryBean?) need to have comments? :)</p><p>I'd probably not have the "EntryBean" know that comments even exist.  My Comment *may* have-a EntryBean if I need it - say for e-mail subscriptions, I could say "New Comment Added to #CommentBean.GetEntry().GetTitle()#".</p><p>As far as an Entry's page, I'd probably use an Entry instance to show it, and use the results of CommentGateway's ReadByEntryId() method (query) to show the comments.</p><p>But that's just my $.02!</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620472">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620472">6</a> by Raymond Camden
		posted on 8/31/2005 at 4:12 PM
		</div>
		<div class="comment_text"><p>barney: Yes, I'm talking just server side validation.</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620474">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620474">7</a> by Raymond Camden
		posted on 8/31/2005 at 4:15 PM
		</div>
		<div class="comment_text"><p>brad: Glad it helped out.<br>callum, scott, joe - good comments. I was hoping this post would spark such conversations.</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620475">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620475">8</a> by Matt Woodward
		posted on 8/31/2005 at 4:19 PM
		</div>
		<div class="comment_text"><p>Great stuff Ray--the more everyone gets talking about this stuff, the better off we're all going to be as developers.</p><p>Joe, interesting comments about the EntryBean vs. CommentBean.  I suppose in my mind (and this yet another example of the fact that there's "no one right way" to solve any of this stuff) the way I'd think about it is that since comments don't really exist independently of the entry (in other words, a comment *has* to be related to an entry), they should be part of the entry.  So I suppose I'd turn your scenario on its head and use composition, doing something like having an array of comment beans in the entry bean.</p><p>Then again, tomorrow I might wake up and decide I don' t like that approach. ;-)  That's one of the reasons I love OO--really gets your brain going and thinking very hard about how to design and architect applications.  No matter how you solve these conundrums it beats the old way of doing things.</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620479">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620479">9</a> by Scott Barnes
		posted on 8/31/2005 at 5:46 PM
		</div>
		<div class="comment_text"><p>Ah infamous OO-Joe hehehehe</p><p>Hoping you'd take a bite or two ;) hehehehe</p><p>Actually, in truth their is no right or wrong answer and i asked the question more out of "show me how you'd do it and why"..meaning folks, stop and thought for a change instead of following blindly (ie not saying Joe follows, far from it..just he happened to bite first...joe your supposed to let others comment and then attack ehehe)</p><p>Actually what differs a comment from a post? semantics? could a comment be a post? when you think about it, a entry has comments, first being the original posters..</p><p>think forums..</p><p>Messages belong to a thread, a thread belongs to a forum. Original thread starting message is treated as original post?</p><p>Ie now we are getting into what's a container and whats an entity? heheh</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620481">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620481">10</a> by Sean Corfield
		posted on 9/1/2005 at 3:19 AM
		</div>
		<div class="comment_text"><p>In memory / objects, it's convenient to navigate from an entry to its comments (entry has-a list-of comments) but in the database, it's easier to have the entry ID in the comment record and do SELECT ... FROM comments where entryID = ... ORDER BY commentDate ASC to get the query object containing comments for a given entry.</p><p>In fact, since you rarely need to interact with a single comment (just when you are creating a new one), you may as well just stick with the query object for comments and your entry object might then contain the query object - in place of list-of comment objects. Generally not a good idea to convert aggregate data into objects when all you're going to do is loop over it and read some fields out of it!</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620476">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620476">11</a> by Matt Woodward
		posted on 9/1/2005 at 3:38 AM
		</div>
		<div class="comment_text"><p>Very good point Sean--I run into that a lot as I help people get into OOP.  It's VERY common for people to want to *not* use a query object, which of course if as you point out all you need to do is output simple query-type data, creating an array of objects to do that is adding inefficiency for no reason.  All depends on how you're going to use it.</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620473">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620473">12</a> by wolf2k5
		posted on 9/1/2005 at 9:24 PM
		</div>
		<div class="comment_text"><p>&gt; The way I work with CFCs now is based on a method I saw in a Sean Corfield presentation a few months ago.</p><p>Is the presentation available for download?</p><p>Thanks.</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620480">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620480">13</a> by wolf2k5
		posted on 9/1/2005 at 9:28 PM
		</div>
		<div class="comment_text"><p>&gt; errors = resource.validate();</p><p>What about having two separate methods validate() (returns true or false) and getErrors() (returns an error object, struct, array of structs or something like that)?</p><p>Wouldn't that be a better choice?</p><p>Thanks.</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620477">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620477">14</a> by Raymond Camden
		posted on 9/1/2005 at 9:59 PM
		</div>
		<div class="comment_text"><p>wolk2k5: Maybe. I don't know - it just feels right this way. :)</p><p>Also - Seans preso was on his blog. I believe if you search for BACFUG presentations, you will find it.</p></div>
	</div>
</div>
		
<div class="comment" id="c_1713620478">
	<div>
		<img src="//a.disquscdn.com/1611874952/images/noavatar32.png" class="comment_author_profile_pic">
	</div>
	<div>
		<div class="comment_header">
		Comment <a href="#c_1713620478">15</a> by Sean Corfield
		posted on 9/2/2005 at 2:25 AM
		</div>
		<div class="comment_text"><p>Mostly I give copies of the presentations to the CFUGs and conferences that I speak at and leave it up to them to post the PPT / PDF / FlashPaper files. I change the talks almost every time I give the talk so I don't post it on my site.</p><p>You can download the code examples from my site, however:</p><p><a href="http://disq.us/url?url=http%3A%2F%2Fcorfield.org%2Farticles%2Fcfunited_code.zip%3AU1jqSdvp6f-Fh4-XSfQYgygCBU4&amp;cuid=3321886" rel="nofollow noopener" title="http://corfield.org/articles/cfunited_code.zip">http://corfield.org/article...</a></p><p>There are seven variants of the same application:</p><p>1. traditional (procedural) Fusebox</p><p>2. MVC (procedural) Fusebox</p><p>3. OO Fusebox using three simple model CFCs</p><p>4. Mach II using three simple model CFCs</p><p>5. Mach II using refactored CFCs to separate out the business logic, data (bean) and data layers (DAO, gateway)</p><p>6. Fusebox + Tartan using refactored CFC model</p><p>7. Model-Glue using three simple model CFCs</p><p>If you search my blog for ggcc8, you'll find a link to an 8th variant that uses Model-Glue + Tartan using refactored CFC model.</p><p>Hope that helps?</p></div>
	</div>
</div>
		